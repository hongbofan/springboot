Service/DAO 层方法命名规约
1) 获取单个对象的方法用 get 做前缀。
2) 获取多个对象的方法用 list 做前缀。
3) 获取统计值的方法用 count 做前缀。
4) 插入的方法用 save(推荐)或 insert 做前缀。 5) 删除的方法用 remove(推荐)或 delete 做前缀。 6) 修改的方法用 update 做前缀。

领域模型命名规约
1) 数据对象:xxxDO，xxx 即为数据表名。
2) 数据传输对象:xxxDTO，xxx 为业务领域相关的名称。 3) 展示对象:xxxVO，xxx 一般为网页名称。
4) POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。

关于基本数据类型与包装数据类型的使用标准如下:
1) 所有的 POJO 类属性必须使用包装数据类型。
2) RPC 方法的返回值和参数必须使用包装数据类型。
3) 所有的局部变量推荐使用基本数据类型。
说明:POJO 类属性没有初值是提醒使用者在需要使用时，必须自己显式地进行赋值，任何NPE 问题，或者入库检查，都由使用者来保证。

POJO 类必须写 toString 方法。使用工具类 source> generate toString 时，如果继 承了另一个 POJO 类，注意在前面加一下 super.toString。

Map/Set 的 key 为自定义对象时，必须重写 hashCode 和 equals。

不要在 foreach 循环里进行元素的 remove/add 操作。remove 元素请使用 Iterator 方式，如果并发操作，需要对 Iterator 对象加锁。

SimpleDateFormat 是线程不安全的类，一般不要定义为 static 变量，如果定义为 static，必须加锁，或者使用 DateUtils 工具类。
如果是 JDK8 的应用，可以使用 instant 代替 Date，Localdatetime 代替 Calendar， Datetimeformatter 代替 Simpledateformatter，官方给出的解释:simple beautiful strong
immutable thread-safe。

